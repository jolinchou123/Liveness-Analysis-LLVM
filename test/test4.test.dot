digraph "CFG for 'test' function" {
	label="CFG for 'test' function";

	Node0x7f81367055b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %e = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 5, i32* %b, align 4\l  store i32 5, i32* %a, align 4\l  store i32 0, i32* %c, align 4\l  store i32 4, i32* %e, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x7f81367055b0 -> Node0x7f8136705d40;
	Node0x7f8136705d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4\l  %cmp = icmp slt i32 %0, 100\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x7f8136705d40:s0 -> Node0x7f8136705f30;
	Node0x7f8136705d40:s1 -> Node0x7f8136705f90;
	Node0x7f8136705f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body:                                         \l  %1 = load i32, i32* %a, align 4\l  %2 = load i32, i32* %b, align 4\l  %sub = sub nsw i32 %1, %2\l  store i32 %sub, i32* %c, align 4\l  br label %while.cond\l}"];
	Node0x7f8136705f30 -> Node0x7f81367062a0;
	Node0x7f81367062a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %3 = load i32, i32* %i, align 4\l  %4 = load i32, i32* %e, align 4\l  %add = add nsw i32 %3, %4\l  %cmp1 = icmp slt i32 %add, 20\l  br i1 %cmp1, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x7f81367062a0:s0 -> Node0x7f8136706740;
	Node0x7f81367062a0:s1 -> Node0x7f81367067f0;
	Node0x7f8136706740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body:                                       \l  %5 = load i32, i32* %a, align 4\l  %6 = load i32, i32* %i, align 4\l  %add2 = add nsw i32 %5, %6\l  store i32 %add2, i32* %i, align 4\l  br label %while.cond, !llvm.loop !5\l}"];
	Node0x7f8136706740 -> Node0x7f81367062a0;
	Node0x7f81367067f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{while.end:                                        \l  %7 = load i32, i32* %c, align 4\l  %8 = load i32, i32* %a, align 4\l  %mul = mul nsw i32 %7, %8\l  store i32 %mul, i32* %b, align 4\l  br label %for.inc\l}"];
	Node0x7f81367067f0 -> Node0x7f8136706470;
	Node0x7f8136706470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.inc:                                          \l  %9 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %9, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond, !llvm.loop !7\l}"];
	Node0x7f8136706470 -> Node0x7f8136705d40;
	Node0x7f8136705f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.end:                                          \l  ret void\l}"];
}
